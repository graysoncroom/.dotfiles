#!/usr/bin/env bash

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

Mod=Mod1 # Use alt as the main Modifier (win key = Mod4)

Wallpapers=( $(find ~/Images/wallpapers -type f) $(find ~/.dotfiles/wallpapers+/.wallpapers/ -type f) )

# Program variables
TERMINAL=st
BROWSER=google-chrome-stable
FILE_BROWSER=ranger
APPLICATION_MENU=dmenu_run

# Movement variables
Left=h
Down=j
Up=k
Right=l

# Daemons
xsetroot -cursor_name left_ptr &
[ $(pgrep redshift | wc -l) -eq 0 ] && redshift &
[ $(pgrep xbanish | wc -l) -eq 0 ]  && xbanish &

feh --no-fehbg --bg-fill "${Wallpapers[1]}" &
# use your $TERMINAL with xterm as fallback:
# "${TERMINAL:-xterm}"
hc keybind $Mod-Shift-q      quit
hc keybind $Mod-Shift-r      reload
hc keybind $Mod-Shift-c      close
hc keybind $Mod-Return       spawn "${TERMINAL:-xterm}" -e tmux 
hc keybind $Mod-b            spawn "$BROWSER"
hc keybind $Mod-Shift-Return spawn "$APPLICATION_MENU"

# basic movement in tiling and floating Mode
# focusing clients
hc keybind $Mod-$Left  focus left
hc keybind $Mod-$Down  focus down
hc keybind $Mod-$Up    focus up
hc keybind $Mod-$Right focus right

# moving clients in tiling and floating Mode
hc keybind $Mod-Shift-$Left  shift left
hc keybind $Mod-Shift-$Down  shift down
hc keybind $Mod-Shift-$Up    shift up
hc keybind $Mod-Shift-$Right shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-s split bottom  0.5
hc keybind $Mod-v split right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-$Left  resize left  +$resizestep
hc keybind $Mod-Control-$Down  resize down  +$resizestep
hc keybind $Mod-Control-$Up    resize up    +$resizestep
hc keybind $Mod-Control-$Right resize right +$resizestep

# tags
tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r       remove
hc keybind $Mod-s       floating toggle
hc keybind $Mod-f       fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p       pseudotile toggle
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-space                                                  \
    or , and . compare tags.focus.curframe_wcount = 2                  \
             . cycle_layout +1 vertical horizontal max vertical grid   \
       , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace cycle_monitor
hc keybind $Mod-Tab       cycle_all +1
hc keybind $Mod-Shift-Tab cycle_all -1
hc keybind $Mod-c         cycle
hc keybind $Mod-i         jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#222222'
hc set frame_border_normal_color '#101010'
hc set frame_bg_normal_color '#565656'
hc set frame_bg_active_color '#345F0C'
hc set frame_border_width 0
hc set always_show_frame off
hc set frame_bg_transparent on
hc set frame_transparent_width 4
hc set frame_gap 20

hc attr theme.active.color '#9fbc00'
hc attr theme.normal.color '#454545'
hc attr theme.urgent.color orange
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 4
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 0
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#3E4A00'
hc attr theme.active.outer_color '#3E4A00'
hc attr theme.background_color '#141414'

hc set window_gap 0
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0

# rules
hc unrule -F
#hc rule class=XTerm tag=3 # move all xterms to tag 3
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart
#hc rule focus=off # normally do not focus new clients
# give focus to most common terminals
#hc rule class~'(.*[Rr]xvt.*|.*[Tt]erm|Konsole)' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
# hc set_monitors 1280x1024+0+0 1280x1024+1280+0
# or simply:
hc detect_monitors

# find the panel
panel=~/.config/herbstluftwm/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1); do
    # start it on each monitor
    "$panel" "$monitor" &
done

#pkill polybar
#polybar -c ~/.config/herbstluftwm/polybar herbst &
#~/.config/polybar/launch.sh
