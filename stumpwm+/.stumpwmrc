;; -*-lisp-*-

(in-package :stumpwm)

(set-prefix-key (kbd "C-SPC"))

(defvar +terminal+ "urxvt")
(defvar +file-browser+ "ranger")
(defvar +web-browser+ "firefox")
(defvar +process-browser+ "htop")
(defvar +app-menu+ "rofi")
(defvar +lock-screen+ "~/.i3/lock")

(defvar +wallpaper+ "~/Pictures/wallpapers/desert-light-mountain.png")

;;; Prompt the user for an interactive command.
(defcommand colon1 (&optional (initial "")) (:rest)
  (let ((cmd (read-one-line (current-screen) ": " :initial-input initial)))
    (when cmd
      (eval-command cmd t))))

;;; Abstraction over boilerplate program execution code.
(defmacro launch (program &optional &key from (with-args "-e"))
  `(format nil "exec ~:[~*~a~;~:*~a ~a ~a~]" ,from ,with-args ,program))

;; Movement
(define-key *root-map* (kbd "h") "move-focus left")
(define-key *root-map* (kbd "j") "move-focus down")
(define-key *root-map* (kbd "k") "move-focus up")
(define-key *root-map* (kbd "l") "move-focus right")

(define-key *root-map* (kbd "C-h") "move-window left")
(define-key *root-map* (kbd "C-j") "move-window down")
(define-key *root-map* (kbd "C-k") "move-window up")
(define-key *root-map* (kbd "C-l") "move-window right")

;; Application
(define-key *root-map* (kbd "b") (launch +web-browser+))
(define-key *root-map* (kbd "Delete") (launch +lock-screen+))
(define-key *root-map* (kbd "RET") (launch +terminal+))
(define-key *root-map* (kbd "r") (launch +file-browser+ :from +terminal+))
(define-key *root-map* (kbd "!") (launch (format nil "~a -show run" +app-menu+)))

;; General
(define-key *root-map* (kbd "C-f") "fullscreen")
(define-key *root-map* (kbd "t") "time")
(define-key *root-map* (kbd "-") "vsplit")
(define-key *root-map* (kbd "|") "hsplit")

;; Init
(run-shell-command "redshift")
(run-shell-command (format nil "wal -i ~a" +wallpaper+))
(run-shell-command "xbanish")
