;; -*-lisp-*-

(in-package :stumpwm)

(set-module-dir "~/.stumpwm.d/contrib")
(load-module "swm-gaps")

(require :swank)
(swank-loader:init)
(swank:create-server :port 4004
                     :style swank:*communication-style*
                     :dont-close t)

(set-prefix-key (kbd "C-SPC"))

(defparameter *terminal* "urxvt")
(defparameter *file-browser* "ranger")
(defparameter *web-browser* "firefox")
(defparameter *process-browser* "htop")
(defparameter *app-menu* "rofi")
(defparameter *lock-screen* "~/.i3/lock")
(defparameter *network-manager* "nmtui")
(defparameter *wallpaper* "~/.wallpapers/desert-light-mountain.png")

;;; Prompt the user for an interactive command.
(defcommand colon1 (&optional (initial "")) (:rest)
  (let ((cmd (read-one-line (current-screen) ": " :initial-input initial)))
    (when cmd
      (eval-command cmd t))))

;;; Abstraction over boilerplate program execution code.
(defmacro launch (program &optional &key from (with-args "-e"))
  `(format nil "exec ~:[~*~a~;~:*~a ~a ~a~]" ,from ,with-args ,program))

;; Formatting
(setf *startup-message* nil)
(setf *window-border-style* :thin)
(setf *message-window-gravity* :center)
(setf *input-window-gravity* :center)
(setf *timeout-wait* 3)
(setf swm-gaps:*inner-gaps-size* 10)
(setf swm-gaps:*outer-gaps-size* 20)

;; Movement
(define-key *root-map* (kbd "h") "move-focus left")
(define-key *root-map* (kbd "j") "move-focus down")
(define-key *root-map* (kbd "k") "move-focus up")
(define-key *root-map* (kbd "l") "move-focus right")
(define-key *root-map* (kbd "C-h") "move-window left")
(define-key *root-map* (kbd "C-j") "move-window down")
(define-key *root-map* (kbd "C-k") "move-window up")
(define-key *root-map* (kbd "C-l") "move-window right")

;; Multimedia
(define-key *root-map* (kbd "XF86AudioLowerVolume") "exec pactl set-sink-volume 0 +5%")
(define-key *root-map* (kbd "XF86AudioRaiseVolume") "exec pactl set-sink-volume 0 -5%")
(define-key *root-map* (kbd "XF86AudioMute") "exec pactl set-sink-mute 0 toggle")
(define-key *root-map* (kbd "XF86AudioPause") "exec playerctl pause")
(define-key *root-map* (kbd "XF86AudioPlay") "exec playerctl play")
(define-key *root-map* (kbd "XF86AudioNext") "exec playerctl next")
(define-key *root-map* (kbd "XF86AudioPrev") "exec playerctl previous")

;; Application
(define-key *root-map* (kbd "b") (launch *web-browser*))
(define-key *root-map* (kbd "Delete") (launch *lock-screen*))
(define-key *root-map* (kbd "RET") (launch *terminal*))
(define-key *root-map* (kbd "r") (launch *file-browser* :from *terminal*))
(define-key *root-map* (kbd "!") (launch (format nil "~a -show run" *app-menu*)))
(define-key *root-map* (kbd "Menu") (launch *network-manager* :from *terminal*))

;; General
(define-key *root-map* (kbd "C-f") "fullscreen")
(define-key *root-map* (kbd "C-g") "toggle-gaps")
(define-key *root-map* (kbd "t") "time")
(define-key *root-map* (kbd "-") "vsplit")
(define-key *root-map* (kbd "|") "hsplit")

;; Init
(run-shell-command "redshift")
(run-shell-command (format nil "wal -i ~a" *wallpaper*))
(run-shell-command "xbanish")
