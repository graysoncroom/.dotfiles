(in-package #:glsl-spec)

(defparameter *functions*
  '((:name "EmitStreamVertex" :return "void" :args (("stream" "int")) :versions (400 410 420 430 440 450) :pure nil)
    (:name "EmitVertex" :return "void" :args NIL :versions (150 330 400 410 420 430 440 450) :pure nil)
    (:name "EndPrimitive" :return "void" :args NIL :versions (150 330 400 410 420 430 440 450) :pure nil)
    (:name "EndStreamPrimitive" :return "void" :args (("stream" "int")) :versions (400 410 420 430 440 450) :pure nil)
    (:name "abs" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "float" :args (("x" "float")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "vec2" :args (("x" "vec2")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "vec3" :args (("x" "vec3")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "vec4" :args (("x" "vec4")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "int" :args (("x" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "ivec2" :args (("x" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "ivec3" :args (("x" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "ivec4" :args (("x" "ivec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "abs" :return "double" :args (("x" "double")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "dvec2" :args (("x" "dvec2")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "dvec3" :args (("x" "dvec3")) :versions (410 420 430 440 450) :pure t)
    (:name "abs" :return "dvec4" :args (("x" "dvec4")) :versions (410 420 430 440 450) :pure t)
    (:name "acos" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acos" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acos" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acos" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acosh" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acosh" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acosh" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "acosh" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "all" :return "bool" :args (("x" "bvec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "all" :return "bool" :args (("x" "bvec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "all" :return "bool" :args (("x" "bvec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "any" :return "bool" :args (("x" "bvec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "any" :return "bool" :args (("x" "bvec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "any" :return "bool" :args (("x" "bvec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asin" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asin" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asin" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asin" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asinh" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asinh" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asinh" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "asinh" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atan" :return "float" :args (("y" "float") ("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atan" :return "vec2" :args (("y" "vec2") ("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atan" :return "vec3" :args (("y" "vec3") ("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atan" :return "vec4" :args (("y" "vec4") ("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atanh" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atanh" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atanh" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atanh" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "atomicAdd" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicAdd" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "atomicAnd" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicAnd" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "atomicCompSwap" :return "int" :args (("mem" "int" :inout) ("compare" "uint") ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "atomicCompSwap" :return "uint" :args (("mem" "uint" :inout) ("compare" "uint") ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "atomicCounter" :return "uint" :args (("c" "atomic_uint")) :versions (420 430 440 450) :pure t)
    (:name "atomicCounterDecrement" :return "uint" :args (("c" "atomic_uint")) :versions (420 430 440 450) :pure nil)
    (:name "atomicCounterIncrement" :return "uint" :args (("c" "atomic_uint")) :versions (420 430 440 450) :pure nil)
    (:name "atomicExchange" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicExchange" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "atomicMax" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicMax" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")):versions (430 440 450) :pure nil)
    (:name "atomicMin" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicMin" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "atomicOr" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicOr" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")):versions (430 440 450) :pure nil)
    (:name "atomicXor" :return "int" :args (("mem" "int" :inout) ("data" "int")) :versions (430 440 450) :pure nil)
    (:name "atomicXor" :return "uint" :args (("mem" "uint" :inout) ("data" "uint")) :versions (430 440 450) :pure nil)
    (:name "barrier" :return "void" :args NIL :versions (400 410 420 430 440 450) :pure nil)
    (:name "bitCount" :return "int" :args (("value" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "int" :args (("value" "uint")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "ivec2" :args (("value" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "ivec2" :args (("value" "uvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "ivec3" :args (("value" "ivec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "ivec3" :args (("value" "uvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "ivec4" :args (("value" "ivec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitCount" :return "ivec4" :args (("value" "uvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "int" :args (("value" "int") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "ivec2" :args (("value" "ivec2") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "ivec3" :args (("value" "ivec3") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "ivec4" :args (("value" "ivec4") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "uint" :args (("value" "uint") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "uvec2" :args (("value" "uvec2") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "uvec3" :args (("value" "uvec3") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldExtract" :return "uvec4" :args (("value" "uvec4") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "int" :args (("base" "int") ("insert" "int") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "ivec2" :args (("base" "ivec2") ("insert" "ivec2") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "ivec3" :args (("base" "ivec3") ("insert" "ivec3") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "ivec4" :args (("base" "ivec4") ("insert" "ivec4") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "uint" :args (("base" "uint") ("insert" "uint") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "uvec2" :args (("base" "uvec2") ("insert" "uvec2") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "uvec3" :args (("base" "uvec3") ("insert" "uvec3") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldInsert" :return "uvec4" :args (("base" "uvec4") ("insert" "uvec4") ("offset" "int") ("bits" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "int" :args (("value" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "ivec2" :args (("value" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "ivec3" :args (("value" "ivec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "ivec4" :args (("value" "ivec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "uint" :args (("value" "uint")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "uvec2" :args (("value" "uvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "uvec3" :args (("value" "uvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "bitfieldReverse" :return "uvec4" :args (("value" "uvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "float" :args (("x" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "vec2" :args (("x" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "vec3" :args (("x" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "ceil" :return "vec4" :args (("x" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "double" :args (("x" "double") ("minVal" "double") ("maxVal" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "dvec2" :args (("x" "dvec2") ("minVal" "double") ("maxVal" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "dvec2" :args (("x" "dvec2") ("minVal" "dvec2") ("maxVal" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "dvec3" :args (("x" "dvec3") ("minVal" "double") ("maxVal" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "dvec3" :args (("x" "dvec3") ("minVal" "dvec3") ("maxVal" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "dvec4" :args (("x" "dvec4") ("minVal" "double") ("maxVal" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "dvec4" :args (("x" "dvec4") ("minVal" "dvec4") ("maxVal" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "float" :args (("x" "float") ("minVal" "float") ("maxVal" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "int" :args (("x" "int") ("minVal" "int") ("maxVal" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "ivec2" :args (("x" "ivec2") ("minVal" "int") ("maxVal" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "ivec2" :args (("x" "ivec2") ("minVal" "ivec2") ("maxVal" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "ivec3" :args (("x" "ivec3") ("minVal" "int") ("maxVal" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "ivec3" :args (("x" "ivec3") ("minVal" "ivec3") ("maxVal" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "ivec4" :args (("x" "ivec4") ("minVal" "int") ("maxVal" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "ivec4" :args (("x" "ivec4") ("minVal" "ivec4") ("maxVal" "ivec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uint" :args (("x" "uint") ("minVal" "uint") ("maxVal" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uvec2" :args (("x" "uvec2") ("minVal" "uint") ("maxVal" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uvec2" :args (("x" "uvec2") ("minVal" "uvec2") ("maxVal" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uvec3" :args (("x" "uvec3") ("minVal" "uint") ("maxVal" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uvec3" :args (("x" "uvec3") ("minVal" "uvec3") ("maxVal" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uvec4" :args (("x" "uvec4") ("minVal" "uint") ("maxVal" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "uvec4" :args (("x" "uvec4") ("minVal" "uvec4") ("maxVal" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "vec2" :args (("x" "vec2") ("minVal" "float") ("maxVal" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "vec2" :args (("x" "vec2") ("minVal" "vec2") ("maxVal" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "vec3" :args (("x" "vec3") ("minVal" "float") ("maxVal" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "vec3" :args (("x" "vec3") ("minVal" "vec3") ("maxVal" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "vec4" :args (("x" "vec4") ("minVal" "float") ("maxVal" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "clamp" :return "vec4" :args (("x" "vec4") ("minVal" "vec4") ("maxVal" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cos" :return "float" :args (("angle" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cos" :return "vec2" :args (("angle" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cos" :return "vec3" :args (("angle" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cos" :return "vec4" :args (("angle" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cosh" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cosh" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cosh" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cosh" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "cross" :return "dvec3" :args (("x" "dvec3") ("y" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "cross" :return "vec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dFdx" :return "float" :args (("p" "float")) :versions (110 120 130 140 150 330 GLSL-SPEC::|400A| 410 420 430 440 450) :pure t)
    (:name "dFdx" :return "vec2" :args (("p" "vec2")) :versions (110 120 130 140 150 330 GLSL-SPEC::|400A| 410 420 430 440 450) :pure t)
    (:name "dFdx" :return "vec3" :args (("p" "vec3")) :versions (110 120 130 140 150 330 GLSL-SPEC::|400A| 410 420 430 440 450) :pure t)
    (:name "dFdx" :return "vec4" :args (("p" "vec4")) :versions (110 120 130 140 150 330 GLSL-SPEC::|400A| 410 420 430 440 450) :pure t)
    (:name "dFdxCoarse" :return "float" :args (("p" "float")) :versions (450) :pure t)
    (:name "dFdxCoarse" :return "vec2" :args (("p" "vec2")) :versions (450) :pure t)
    (:name "dFdxCoarse" :return "vec3" :args (("p" "vec3")) :versions (450) :pure t)
    (:name "dFdxCoarse" :return "vec4" :args (("p" "vec4")) :versions (450) :pure t)
    (:name "dFdxFine" :return "float" :args (("p" "float")) :versions (450) :pure t)
    (:name "dFdxFine" :return "vec2" :args (("p" "vec2")) :versions (450) :pure t)
    (:name "dFdxFine" :return "vec3" :args (("p" "vec3")) :versions (450) :pure t)
    (:name "dFdxFine" :return "vec4" :args (("p" "vec4")) :versions (450) :pure t)
    (:name "dFdy" :return "float" :args (("p" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dFdy" :return "vec2" :args (("p" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dFdy" :return "vec3" :args (("p" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dFdy" :return "vec4" :args (("p" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dFdyCoarse" :return "float" :args (("p" "float")) :versions (450) :pure t)
    (:name "dFdyCoarse" :return "vec2" :args (("p" "vec2")) :versions (450) :pure t)
    (:name "dFdyCoarse" :return "vec3" :args (("p" "vec3")) :versions (450) :pure t)
    (:name "dFdyCoarse" :return "vec4" :args (("p" "vec4")) :versions (450) :pure t)
    (:name "dFdyFine" :return "float" :args (("p" "float")) :versions (450) :pure t)
    (:name "dFdyFine" :return "vec2" :args (("p" "vec2")) :versions (450) :pure t)
    (:name "dFdyFine" :return "vec3" :args (("p" "vec3")) :versions (450) :pure t)
    (:name "dFdyFine" :return "vec4" :args (("p" "vec4")) :versions (450) :pure t)
    (:name "degrees" :return "float" :args (("radians" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "degrees" :return "vec2" :args (("radians" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "degrees" :return "vec3" :args (("radians" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "degrees" :return "vec4" :args (("radians" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "determinant" :return "double" :args (("m" "dmat2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "determinant" :return "double" :args (("m" "dmat3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "determinant" :return "double" :args (("m" "dmat4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "determinant" :return "float" :args (("m" "mat2")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "determinant" :return "float" :args (("m" "mat3")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "determinant" :return "float" :args (("m" "mat4")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "distance" :return "double" :args (("p0" "double") ("p1" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "distance" :return "double" :args (("p0" "dvec2") ("p1" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "distance" :return "float" :args (("p0" "float") ("p1" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "distance" :return "float" :args (("p0" "vec2") ("p1" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "distance" :return "float" :args (("p0" "vec3") ("p1" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "distance" :return "float" :args (("p0" "vec4") ("p1" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dot" :return "double" :args (("x" "double") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "dot" :return "double" :args (("x" "dvec2") ("y" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "dot" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dot" :return "float" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dot" :return "float" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "dot" :return "float" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "equal" :return "bvec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp2" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp2" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp2" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "exp2" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "faceforward" :return "double" :args (("N" "double") ("I" "double") ("Nref" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "faceforward" :return "dvec2" :args (("N" "dvec2") ("I" "dvec2") ("Nref" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "faceforward" :return "float" :args (("N" "float") ("I" "float") ("Nref" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "faceforward" :return "vec2" :args (("N" "vec2") ("I" "vec2") ("Nref" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "faceforward" :return "vec3" :args (("N" "vec3") ("I" "vec3") ("Nref" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "faceforward" :return "vec4" :args (("N" "vec4") ("I" "vec4") ("Nref" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "int" :args (("value" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "int" :args (("value" "uint")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "ivec2" :args (("value" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "ivec2" :args (("value" "uvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "ivec3" :args (("value" "ivec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "ivec3" :args (("value" "uvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "ivec4" :args (("value" "ivec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findLSB" :return "ivec4" :args (("value" "uvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "int" :args (("value" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "int" :args (("value" "uint")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "ivec2" :args (("value" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "ivec2" :args (("value" "uvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "ivec3" :args (("value" "ivec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "ivec3" :args (("value" "uvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "ivec4" :args (("value" "ivec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "findMSB" :return "ivec4" :args (("value" "uvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "floatBitsToInt" :return "int" :args (("x" "float")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToInt" :return "ivec2" :args (("x" "vec2")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToInt" :return "ivec3" :args (("x" "vec3")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToInt" :return "ivec4" :args (("x" "vec4")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToUint" :return "uint" :args (("x" "float")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToUint" :return "uvec2" :args (("x" "vec2")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToUint" :return "uvec3" :args (("x" "vec3")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floatBitsToUint" :return "uvec4" :args (("x" "vec4")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "floor" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "floor" :return "float" :args (("x" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "floor" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "floor" :return "vec2" :args (("x" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "floor" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "floor" :return "vec3" :args (("x" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "floor" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "floor" :return "vec4" :args (("x" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fma" :return "double" :args (("a" "double") ("b" "double") ("c" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fma" :return "dvec2" :args (("a" "dvec2") ("b" "dvec2") ("c" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fma" :return "float" :args (("a" "float") ("b" "float") ("c" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fma" :return "vec2" :args (("a" "vec2") ("b" "vec2") ("c" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fma" :return "vec3" :args (("a" "vec3") ("b" "vec3") ("c" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fma" :return "vec4" :args (("a" "vec4") ("b" "vec4") ("c" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fract" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fract" :return "float" :args (("x" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fract" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fract" :return "vec2" :args (("x" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fract" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fract" :return "vec3" :args (("x" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "fract" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fract" :return "vec4" :args (("x" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "double" :args (("x" "double") ("exp" "int" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "dvec2" :args (("x" "dvec2") ("exp" "ivec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "dvec3" :args (("x" "dvec3") ("exp" "ivec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "dvec4" :args (("x" "dvec4") ("exp" "ivec4" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "float" :args (("x" "float") ("exp" "int" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "vec2" :args (("x" "vec2") ("exp" "ivec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "vec3" :args (("x" "vec3") ("exp" "ivec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "frexp" :return "vec4" :args (("x" "vec4") ("exp" "ivec4" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "fwidth" :return "float" :args (("p" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fwidth" :return "vec2" :args (("p" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fwidth" :return "vec3" :args (("p" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fwidth" :return "vec4" :args (("p" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "fwidthCoarse" :return "float" :args (("p" "float")) :versions (450) :pure t)
    (:name "fwidthCoarse" :return "vec2" :args (("p" "vec2")) :versions (450) :pure t)
    (:name "fwidthCoarse" :return "vec3" :args (("p" "vec3")) :versions (450) :pure t)
    (:name "fwidthCoarse" :return "vec4" :args (("p" "vec4")) :versions (450) :pure t)
    (:name "fwidthFine" :return "float" :args (("p" "float")) :versions (450) :pure t)
    (:name "fwidthFine" :return "vec2" :args (("p" "vec2")) :versions (450) :pure t)
    (:name "fwidthFine" :return "vec3" :args (("p" "vec3")) :versions (450) :pure t)
    (:name "fwidthFine" :return "vec4" :args (("p" "vec4")) :versions (450) :pure t)
    (:name "greaterThan" :return "bvec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThan" :return "bvec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "greaterThanEqual" :return "bvec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "groupMemoryBarrier" :return "void" :args NIL :versions (430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAdd" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicAnd" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "bufferImage") ("P" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage1D") ("P" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image1D") ("P" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image2D") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "image3D") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage1D") ("P" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("compare" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "bufferImage") ("P" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage1D") ("P" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image1D") ("P" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage1D") ("P" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicCompSwap" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("compare" "uint") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image1D") ("P" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "float")) :versions (450) :pure nil)
    (:name "imageAtomicExchange" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicExchange" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMax" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicMin" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicOr" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "bufferImage") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "image3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "imageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage1D") ("P" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage2D") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimage3D") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimageCube") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "int" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "int")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "bufferImage") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "image3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "imageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage1D") ("P" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageAtomicXor" :return "uint" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uint")) :versions (420 430 440 450) :pure nil)
    (:name "imageLoad" :return "ivec4" :args (("image" "ibufferImage") ("P" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage1D") ("P" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage1DArray") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage2D") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage2DArray") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage2DRect") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimage3D") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimageCube") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "ivec4" :args (("image" "iimageCubeArray") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "ubufferImage") ("P" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage1D") ("P" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage1DArray") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage2D") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage2DArray") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage2DRect") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimage3D") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimageCube") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "uvec4" :args (("image" "uimageCubeArray") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "bufferImage") ("P" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image1D") ("P" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image1DArray") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image2D") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image2DArray") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image2DRect") ("P" "ivec2")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "image3D") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "imageCube") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageLoad" :return "vec4" :args (("image" "imageCubeArray") ("P" "ivec3")) :versions (420 430 440 450) :pure t)
    (:name "imageSamples" :return "int" :args (("image" "iimage2DMS")) :versions (450) :pure t)
    (:name "imageSamples" :return "int" :args (("image" "iimage2DMSArray")) :versions (450) :pure t)
    (:name "imageSamples" :return "int" :args (("image" "image2DMS")) :versions (450) :pure t)
    (:name "imageSamples" :return "int" :args (("image" "image2DMSArray")) :versions (450) :pure t)
    (:name "imageSamples" :return "int" :args (("image" "uimage2DMS")) :versions (450) :pure t)
    (:name "imageSamples" :return "int" :args (("image" "uimage2DMSArray")) :versions (450) :pure t)
    (:name "imageSize" :return "int" :args (("image" "iimage1D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "int" :args (("image" "iimageBuffer")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "int" :args (("image" "image1D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "int" :args (("image" "imageBuffer")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "int" :args (("image" "uimage1D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "int" :args (("image" "uimageBuffer")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "iimage1DArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "iimage2D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "iimage2DMS")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "iimageCube")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "iimageRect")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "image1DArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "image2D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "image2DMS")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "imageCube")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "imageRect")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "uimage1DArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "uimage2D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "uimage2DMS")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "uimageCube")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec2" :args (("image" "uimageRect")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "iimage2DArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "iimage2DMSArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "iimage3D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "iimageCubeArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "image2DArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "image2DMSArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "image3D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "imageCubeArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "uimage2DArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "uimage2DMSArray")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "uimage3D")) :versions (430 440 450) :pure t)
    (:name "imageSize" :return "ivec3" :args (("image" "uimageCubeArray")) :versions (430 440 450) :pure t)
    (:name "imageStore" :return "void" :args (("image" "bufferImage") ("P" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "bufferImage") ("P" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "bufferImage") ("P" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage1D") ("P" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage1D") ("P" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage1D") ("P" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage1DArray") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2D") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2D") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2D") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DArray") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage2DRect") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage3D") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage3D") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimage3D") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimageCube") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimageCube") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimageCube") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "iimageCubeArray") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image1D") ("P" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image1D") ("P" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image1D") ("P" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image1DArray") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image1DArray") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image1DArray") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2D") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2D") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2D") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DArray") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DArray") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DArray") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DMS") ("P" "ivec2") ("sample" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DRect") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DRect") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image2DRect") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image3D") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image3D") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "image3D") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "imageCube") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "imageCube") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "imageCube") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "imageCubeArray") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage1D") ("P" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage1D") ("P" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage1D") ("P" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage1DArray") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2D") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2D") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2D") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DArray") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DMS") ("P" "ivec2") ("sample" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DMSArray") ("P" "ivec3") ("sample" "int") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage2DRect") ("P" "ivec2") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage3D") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage3D") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimage3D") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimageCube") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimageCube") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimageCube") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "ivec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "uvec4")) :versions (420 430 440 450) :pure nil)
    (:name "imageStore" :return "void" :args (("image" "uimageCubeArray") ("P" "ivec3") ("data" "vec4")) :versions (420 430 440 450) :pure nil)
    (:name "imulExtended" :return "void" :args (("x" "int") ("y" "int") ("msb" "int" :out) ("lsb" "int" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "imulExtended" :return "void" :args (("x" "ivec2") ("y" "ivec2") ("msb" "ivec2" :out) ("lsb" "ivec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "imulExtended" :return "void" :args (("x" "ivec3") ("y" "ivec3") ("msb" "ivec3" :out) ("lsb" "ivec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "imulExtended" :return "void" :args (("x" "ivec4") ("y" "ivec4") ("msb" "ivec4" :out) ("lsb" "ivec4" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "intBitsToFloat" :return "float" :args (("x" "int")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "intBitsToFloat" :return "vec2" :args (("x" "ivec2")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "intBitsToFloat" :return "vec3" :args (("x" "ivec3")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "intBitsToFloat" :return "vec4" :args (("x" "ivec4")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "interpolateAtCentroid" :return "float" :args (("interpolant" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtCentroid" :return "vec2" :args (("interpolant" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtCentroid" :return "vec3" :args (("interpolant" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtCentroid" :return "vec4" :args (("interpolant" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtOffset" :return "float" :args (("interpolant" "float") ("offset" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtOffset" :return "vec2" :args (("interpolant" "vec2") ("offset" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtOffset" :return "vec3" :args (("interpolant" "vec3") ("offset" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtOffset" :return "vec4" :args (("interpolant" "vec4") ("offset" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtSample" :return "float" :args (("interpolant" "float") ("sample" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtSample" :return "vec2" :args (("interpolant" "vec2") ("sample" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtSample" :return "vec3" :args (("interpolant" "vec3") ("sample" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "interpolateAtSample" :return "vec4" :args (("interpolant" "vec4") ("sample" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inverse" :return "dmat2" :args (("m" "dmat2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inverse" :return "dmat3" :args (("m" "dmat3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inverse" :return "dmat4" :args (("m" "dmat4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inverse" :return "mat2" :args (("m" "mat2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "inverse" :return "mat3" :args (("m" "mat3")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "inverse" :return "mat4" :args (("m" "mat4")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "dvec2" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "dvec3" :args (("x" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "dvec4" :args (("x" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "inversesqrt" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bool" :args (("x" "double")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bool" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bvec2" :args (("x" "dvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bvec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bvec3" :args (("x" "dvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bvec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bvec4" :args (("x" "dvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isinf" :return "bvec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bool" :args (("x" "double")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bool" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bvec2" :args (("x" "dvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bvec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bvec3" :args (("x" "dvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bvec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bvec4" :args (("x" "dvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "isnan" :return "bvec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "double" :args (("x" "double") ("exp" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "dvec2" :args (("x" "dvec2") ("exp" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "dvec3" :args (("x" "dvec3") ("exp" "ivec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "dvec4" :args (("x" "dvec4") ("exp" "ivec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "float" :args (("x" "float") ("exp" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "vec2" :args (("x" "vec2") ("exp" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "vec3" :args (("x" "vec3") ("exp" "ivec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "ldexp" :return "vec4" :args (("x" "vec4") ("exp" "ivec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "length" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "length" :return "double" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "length" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "length" :return "float" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "length" :return "float" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "length" :return "float" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThan" :return "bvec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "lessThanEqual" :return "bvec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log2" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log2" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log2" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "log2" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2" :args (("x" "mat2") ("y" "mat2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2" :args (("x" "mat2") ("y" "mat2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2" :args (("x" "mat2") ("y" "mat2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x2" :args (("x" "mat2x2") ("y" "mat2x2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x2" :args (("x" "mat2x2") ("y" "mat2x2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x2" :args (("x" "mat2x2") ("y" "mat2x2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x3" :args (("x" "mat2x3") ("y" "mat2x3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x3" :args (("x" "mat2x3") ("y" "mat2x3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x3" :args (("x" "mat2x3") ("y" "mat2x3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x4" :args (("x" "mat2x4") ("y" "mat2x4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x4" :args (("x" "mat2x4") ("y" "mat2x4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat2x4" :args (("x" "mat2x4") ("y" "mat2x4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3" :args (("x" "mat3") ("y" "mat3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3" :args (("x" "mat3") ("y" "mat3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3" :args (("x" "mat3") ("y" "mat3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x2" :args (("x" "mat3x2") ("y" "mat3x2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x2" :args (("x" "mat3x2") ("y" "mat3x2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x2" :args (("x" "mat3x2") ("y" "mat3x2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x3" :args (("x" "mat3x3") ("y" "mat3x3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x3" :args (("x" "mat3x3") ("y" "mat3x3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x3" :args (("x" "mat3x3") ("y" "mat3x3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x4" :args (("x" "mat3x4") ("y" "mat3x4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x4" :args (("x" "mat3x4") ("y" "mat3x4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat3x4" :args (("x" "mat3x4") ("y" "mat3x4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4" :args (("x" "mat4") ("y" "mat4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4" :args (("x" "mat4") ("y" "mat4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4" :args (("x" "mat4") ("y" "mat4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x2" :args (("x" "mat4x2") ("y" "mat4x2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x2" :args (("x" "mat4x2") ("y" "mat4x2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x2" :args (("x" "mat4x2") ("y" "mat4x2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x3" :args (("x" "mat4x3") ("y" "mat4x3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x3" :args (("x" "mat4x3") ("y" "mat4x3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x3" :args (("x" "mat4x3") ("y" "mat4x3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x4" :args (("x" "mat4x4") ("y" "mat4x4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x4" :args (("x" "mat4x4") ("y" "mat4x4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "matrixCompMult" :return "mat4x4" :args (("x" "mat4x4") ("y" "mat4x4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "double" :args (("x" "double") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "double" :args (("x" "double") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "dvec2" :args (("x" "dvec2") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "dvec2" :args (("x" "dvec2") ("y" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "dvec3" :args (("x" "dvec3") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "dvec3" :args (("x" "dvec3") ("y" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "dvec4" :args (("x" "dvec4") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "dvec4" :args (("x" "dvec4") ("y" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "max" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "int" :args (("x" "int") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "int" :args (("x" "int") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "ivec2" :args (("x" "ivec2") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "ivec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "ivec3" :args (("x" "ivec3") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "ivec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "ivec4" :args (("x" "ivec4") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "ivec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uint" :args (("x" "uint") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uint" :args (("x" "uint") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uvec2" :args (("x" "uvec2") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uvec3" :args (("x" "uvec3") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uvec4" :args (("x" "uvec4") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "uvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "vec2" :args (("x" "vec2") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "vec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "vec3" :args (("x" "vec3") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "vec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "vec4" :args (("x" "vec4") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "max" :return "vec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "memoryBarrier" :return "uint" :args NIL :versions (400 410 420 430 440 450) :pure nil)
    (:name "memoryBarrierAtomicCounter" :return "void" :args NIL :versions (430 440 450) :pure nil)
    (:name "memoryBarrierBuffer" :return "void" :args NIL :versions (430 440 450) :pure nil)
    (:name "memoryBarrierImage" :return "void" :args NIL :versions (430 440 450) :pure nil)
    (:name "memoryBarrierShared" :return "void" :args NIL :versions (430 440 450) :pure nil)
    (:name "min" :return "double" :args (("x" "double") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "double" :args (("x" "double") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "dvec2" :args (("x" "dvec2") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "dvec2" :args (("x" "dvec2") ("y" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "dvec3" :args (("x" "dvec3") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "dvec3" :args (("x" "dvec3") ("y" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "dvec4" :args (("x" "dvec4") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "dvec4" :args (("x" "dvec4") ("y" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "min" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "int" :args (("x" "int") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "int" :args (("x" "int") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "ivec2" :args (("x" "ivec2") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "ivec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "ivec3" :args (("x" "ivec3") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "ivec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "ivec4" :args (("x" "ivec4") ("y" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "ivec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uint" :args (("x" "uint") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uint" :args (("x" "uint") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uvec2" :args (("x" "uvec2") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uvec3" :args (("x" "uvec3") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uvec4" :args (("x" "uvec4") ("y" "uint")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "uvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "vec2" :args (("x" "vec2") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "vec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "vec3" :args (("x" "vec3") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "vec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "vec4" :args (("x" "vec4") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "min" :return "vec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "bool" :args (("x" "bool") ("y" "bool") ("a" "bool")) :versions (450) :pure t)
    (:name "mix" :return "bvec2" :args (("x" "bvec2") ("y" "bvec2") ("a" "bvec2")) :versions (450) :pure t)
    (:name "mix" :return "bvec3" :args (("x" "bvec3") ("y" "bvec3") ("a" "bvec3")) :versions (450) :pure t)
    (:name "mix" :return "bvec4" :args (("x" "bvec4") ("y" "bvec4") ("a" "bvec4")) :versions (450) :pure t)
    (:name "mix" :return "double" :args (("x" "double") ("y" "double") ("a" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "dvec2" :args (("x" "dvec2") ("y" "dvec2") ("a" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "dvec2" :args (("x" "dvec2") ("y" "dvec2") ("a" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "dvec3" :args (("x" "dvec3") ("y" "dvec3") ("a" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "dvec3" :args (("x" "dvec3") ("y" "dvec3") ("a" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "dvec4" :args (("x" "dvec4") ("y" "dvec4") ("a" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "dvec4" :args (("x" "dvec4") ("y" "dvec4") ("a" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mix" :return "float" :args (("x" "float") ("y" "float") ("a" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "int" :args (("x" "int") ("y" "int") ("a" "int")) :versions (450) :pure t)
    (:name "mix" :return "ivec2" :args (("x" "ivec2") ("y" "ivec2") ("a" "ivec2")) :versions (450) :pure t)
    (:name "mix" :return "ivec3" :args (("x" "ivec3") ("y" "ivec3") ("a" "ivec3")) :versions (450) :pure t)
    (:name "mix" :return "ivec4" :args (("x" "ivec4") ("y" "ivec4") ("a" "ivec4")) :versions (450) :pure t)
    (:name "mix" :return "uint" :args (("x" "uint") ("y" "uint") ("a" "uint")) :versions (450) :pure t)
    (:name "mix" :return "uvec2" :args (("x" "uvec2") ("y" "uvec2") ("a" "uvec2")) :versions (450) :pure t)
    (:name "mix" :return "uvec3" :args (("x" "uvec3") ("y" "uvec3") ("a" "uvec3")) :versions (450) :pure t)
    (:name "mix" :return "uvec4" :args (("x" "uvec4") ("y" "uvec4") ("a" "uvec4")) :versions (450) :pure t)
    (:name "mix" :return "vec2" :args (("x" "vec2") ("y" "vec2") ("a" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "vec2" :args (("x" "vec2") ("y" "vec2") ("a" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "vec3" :args (("x" "vec3") ("y" "vec3") ("a" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "vec3" :args (("x" "vec3") ("y" "vec3") ("a" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "vec4" :args (("x" "vec4") ("y" "vec4") ("a" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mix" :return "vec4" :args (("x" "vec4") ("y" "vec4") ("a" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mod" :return "double" :args (("x" "double") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mod" :return "dvec2" :args (("x" "dvec2") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mod" :return "dvec3" :args (("x" "dvec3") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mod" :return "dvec4" :args (("x" "dvec4") ("y" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "mod" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mod" :return "vec2" :args (("x" "vec2") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mod" :return "vec3" :args (("x" "vec3") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "mod" :return "vec4" :args (("x" "vec4") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "modf" :return "double" :args (("x" "double") ("i" "double" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "modf" :return "dvec2" :args (("x" "dvec2") ("i" "dvec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "modf" :return "dvec3" :args (("x" "dvec3") ("i" "dvec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "modf" :return "dvec4" :args (("x" "dvec4") ("i" "dvec4" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "modf" :return "float" :args (("x" "float") ("i" "float" :out)) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "modf" :return "vec2" :args (("x" "vec2") ("i" "vec2" :out)) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "modf" :return "vec3" :args (("x" "vec3") ("i" "vec3" :out)) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "modf" :return "vec4" :args (("x" "vec4") ("i" "vec4" :out)) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise1" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise1" :return "float" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise1" :return "float" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise1" :return "float" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise2" :return "vec2" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise2" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise2" :return "vec2" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise2" :return "vec2" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise3" :return "vec3" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise3" :return "vec3" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise3" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise3" :return "vec3" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise4" :return "vec4" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise4" :return "vec4" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise4" :return "vec4" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "noise4" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "normalize" :return "double" :args (("v" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "normalize" :return "dvec2" :args (("v" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "normalize" :return "float" :args (("v" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "normalize" :return "vec2" :args (("v" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "normalize" :return "vec3" :args (("v" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "normalize" :return "vec4" :args (("v" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "not" :return "bvec2" :args (("x" "bvec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "not" :return "bvec3" :args (("x" "bvec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "not" :return "bvec4" :args (("x" "bvec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec2" :args (("x" "ivec2") ("y" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec2" :args (("x" "uvec2") ("y" "uvec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec3" :args (("x" "ivec3") ("y" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec3" :args (("x" "uvec3") ("y" "uvec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec4" :args (("x" "ivec4") ("y" "ivec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec4" :args (("x" "uvec4") ("y" "uvec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "notEqual" :return "bvec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat2" :args (("c" "dvec2") ("r" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat2x3" :args (("c" "dvec3") ("r" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat2x4" :args (("c" "dvec4") ("r" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat3" :args (("c" "dvec3") ("r" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat3x2" :args (("c" "dvec2") ("r" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat3x4" :args (("c" "dvec4") ("r" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat4" :args (("c" "dvec4") ("r" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat4x2" :args (("c" "dvec2") ("r" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "dmat4x3" :args (("c" "dvec3") ("r" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat2" :args (("c" "vec2") ("r" "vec2")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat2x3" :args (("c" "vec3") ("r" "vec2")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat2x4" :args (("c" "vec4") ("r" "vec2")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat3" :args (("c" "vec3") ("r" "vec3")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat3x2" :args (("c" "vec2") ("r" "vec3")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat3x4" :args (("c" "vec4") ("r" "vec3")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat4" :args (("c" "vec4") ("r" "vec4")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat4x2" :args (("c" "vec2") ("r" "vec4")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "outerProduct" :return "mat4x3" :args (("c" "vec3") ("r" "vec4")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "packDouble2x32" :return "double" :args (("v" "uvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "packHalf2x16" :return "uint" :args (("v" "vec2")) :versions (420 430 440 450) :pure t)
    (:name "packSnorm2x16" :return "uint" :args (("v" "vec2")) :versions (420 430 440 450) :pure t)
    (:name "packSnorm4x8" :return "uint" :args (("v" "vec4")) :versions (410 420 430 440 450) :pure t)
    (:name "packUnorm2x16" :return "uint" :args (("v" "vec2")) :versions (410 420 430 440 450) :pure t)
    (:name "packUnorm4x8" :return "uint" :args (("v" "vec4")) :versions (410 420 430 440 450) :pure t)
    (:name "pow" :return "float" :args (("x" "float") ("y" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "pow" :return "vec2" :args (("x" "vec2") ("y" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "pow" :return "vec3" :args (("x" "vec3") ("y" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "pow" :return "vec4" :args (("x" "vec4") ("y" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "radians" :return "float" :args (("degrees" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "radians" :return "vec2" :args (("degrees" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "radians" :return "vec3" :args (("degrees" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "radians" :return "vec4" :args (("degrees" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "reflect" :return "double" :args (("I" "double") ("N" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "reflect" :return "dvec2" :args (("I" "dvec2") ("N" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "reflect" :return "float" :args (("I" "float") ("N" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "reflect" :return "vec2" :args (("I" "vec2") ("N" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "reflect" :return "vec3" :args (("I" "vec3") ("N" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "reflect" :return "vec4" :args (("I" "vec4") ("N" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "refract" :return "double" :args (("I" "double") ("N" "double") ("eta" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "refract" :return "dvec2" :args (("I" "dvec2") ("N" "dvec2") ("eta" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "refract" :return "float" :args (("I" "float") ("N" "float") ("eta" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "refract" :return "vec2" :args (("I" "vec2") ("N" "vec2") ("eta" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "refract" :return "vec3" :args (("I" "vec3") ("N" "vec3") ("eta" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "refract" :return "vec4" :args (("I" "vec4") ("N" "vec4") ("eta" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "round" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "round" :return "dvec2" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "round" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "round" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "round" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "round" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "roundEven" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "roundEven" :return "dvec2" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "roundEven" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "roundEven" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "roundEven" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "roundEven" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "sign" :return "dvec2" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "sign" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "int" :args (("x" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "ivec2" :args (("x" "ivec2")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "ivec3" :args (("x" "ivec3")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "ivec4" :args (("x" "ivec4")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sign" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sin" :return "float" :args (("angle" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sin" :return "vec2" :args (("angle" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sin" :return "vec3" :args (("angle" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sin" :return "vec4" :args (("angle" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sinh" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sinh" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sinh" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sinh" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "smoothstep" :return "double" :args (("edge0" "double") ("edge1" "double") ("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "smoothstep" :return "dvec2" :args (("edge0" "dvec2") ("edge1" "dvec2") ("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "smoothstep" :return "float" :args (("edge0" "float") ("edge1" "float") ("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "smoothstep" :return "vec2" :args (("edge0" "vec2") ("edge1" "vec2") ("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "smoothstep" :return "vec3" :args (("edge0" "vec3") ("edge1" "vec3") ("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "smoothstep" :return "vec4" :args (("edge0" "vec4") ("edge1" "vec4") ("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sqrt" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "sqrt" :return "dvec2" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "sqrt" :return "float" :args (("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sqrt" :return "vec2" :args (("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sqrt" :return "vec3" :args (("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "sqrt" :return "vec4" :args (("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "step" :return "double" :args (("edge" "double") ("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "step" :return "dvec2" :args (("edge" "dvec2") ("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "step" :return "float" :args (("edge" "float") ("x" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "step" :return "vec2" :args (("edge" "vec2") ("x" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "step" :return "vec3" :args (("edge" "vec3") ("x" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "step" :return "vec4" :args (("edge" "vec4") ("x" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tan" :return "float" :args (("angle" "float")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tan" :return "vec2" :args (("angle" "vec2")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tan" :return "vec3" :args (("angle" "vec3")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tan" :return "vec4" :args (("angle" "vec4")) :versions (110 120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tanh" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tanh" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tanh" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "tanh" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler1D") ("P" "int") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "ivec2") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler2D") ("P" "ivec2") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "ivec3") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler2DMS") ("P" "ivec2") ("sample" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isampler3D") ("P" "ivec3") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "ivec4" :args (("sampler" "isamplerBuffer") ("P" "int")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler1D") ("P" "int") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "ivec2") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler2D") ("P" "ivec2") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "ivec3") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler2DMS") ("P" "ivec2") ("sample" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usampler3D") ("P" "ivec3") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "uvec4" :args (("sampler" "usamplerBuffer") ("P" "int")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler1D") ("P" "int") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "ivec2") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler2D") ("P" "ivec2") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "ivec3") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler2DMS") ("P" "ivec2") ("sample" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler2DMSArray") ("P" "ivec3") ("sample" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "sampler3D") ("P" "ivec3") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetch" :return "vec4" :args (("sampler" "samplerBuffer") ("P" "int")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "int") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "ivec2") ("lod" "int") ("offset" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "ivec2") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "ivec3") ("lod" "int") ("offset" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "ivec2") ("offset" "int")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "ivec3") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "int") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "ivec2") ("lod" "int") ("offset" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "ivec2") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "ivec3") ("lod" "int") ("offset" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "ivec2") ("offset" "int")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "ivec3") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "int") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "ivec2") ("lod" "int") ("offset" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "ivec2") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "ivec3") ("lod" "int") ("offset" "int")) :versions (150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "ivec2") ("offset" "int")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texelFetchOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "ivec3") ("lod" "int") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler2DArrayShadow") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler2DArrayShadow") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec3")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "samplerCubeArrayShadow") ("P" "vec4") ("compare" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "samplerCubeShadow") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "float" :args (("sampler" "samplerCubeShadow") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isamplerCube") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isamplerCube") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isamplerCubeArray") ("P" "vec4") ("bias" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "texture" :return "ivec4" :args (("sampler" "isamplerCubeArray") ("P" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usamplerCube") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usamplerCube") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usamplerCubeArray") ("P" "vec4") ("bias" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "texture" :return "uvec4" :args (("sampler" "usamplerCubeArray") ("P" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler1D") ("P" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "samplerCube") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "samplerCube") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "samplerCubeArray") ("P" "vec4") ("bias" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "texture" :return "vec4" :args (("sampler" "samplerCubeArray") ("P" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isamplerCube") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isamplerCube") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isamplerCubeArray") ("P" "vec4") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "ivec4" :args (("sampler" "isamplerCubeArray") ("P" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usamplerCube") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usamplerCube") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usamplerCubeArray") ("P" "vec4") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "uvec4" :args (("sampler" "usamplerCubeArray") ("P" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DArrayShadow") ("P" "vec3") ("refZ" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DRectShadow") ("P" "vec3") ("refZ" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "sampler2DShadow") ("P" "vec2") ("refZ" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "samplerCube") ("P" "vec3") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "samplerCube") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "samplerCubeArray") ("P" "vec4") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "samplerCubeArray") ("P" "vec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "samplerCubeArrayShadow") ("P" "vec4") ("refZ" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGather" :return "vec4" :args (("sampler" "samplerCubeShadow") ("P" "vec3") ("refZ" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DArrayShadow") ("P" "vec3") ("refZ" "float") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DArrayShadow") ("P" "vec3") ("refZ" "float") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("offset" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DRectShadow") ("P" "vec3") ("refZ" "float") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DRectShadow") ("P" "vec3") ("refZ" "float") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DShadow") ("P" "vec2") ("refZ" "float") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffset" :return "vec4" :args (("sampler" "sampler2DShadow") ("P" "vec2") ("refZ" "float") ("offset" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DArrayShadow") ("P" "vec3") ("refZ" "float") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("offsets[4]" "ivec2") ("comp]" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DRectShadow") ("P" "vec3") ("refZ" "float") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGatherOffsets" :return "vec4" :args (("sampler" "sampler2DShadow") ("P" "vec2") ("refZ" "float") ("offsets[4]" "ivec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isamplerCube") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "ivec4" :args (("sampler" "isamplerCubeArray") ("P" "vec4") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usamplerCube") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "uvec4" :args (("sampler" "usamplerCubeArray") ("P" "vec4") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("dPdx" "float") ("dPdy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "samplerCube") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGrad" :return "vec4" :args (("sampler" "samplerCubeArray") ("P" "vec4") ("dPdx" "vec3") ("dPdy" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "float" :args (("sampler" "sampler2DArrayShadow") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec2") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureGradOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("dPdx" "vec3") ("dPdy" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isamplerCube") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "ivec4" :args (("sampler" "isamplerCubeArray") ("P" "vec4") ("lod" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usamplerCube") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "uvec4" :args (("sampler" "usamplerCubeArray") ("P" "vec4") ("lod" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "samplerCube") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLod" :return "vec4" :args (("sampler" "samplerCubeArray") ("P" "vec4") ("lod" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("lod" "float") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("lod" "float") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureLodOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("lod" "float") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler1DArrayShadow") ("P" "vec3") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec3") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler2DArrayShadow") ("P" "vec4") ("offset" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec3") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler1DArray") ("P" "vec2") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler2DArray") ("P" "vec3") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("offset" "ivec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler1DArray") ("P" "vec2") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler2DArray") ("P" "vec3") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("offset" "ivec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler1DArray") ("P" "vec2") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler2DArray") ("P" "vec3") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("offset" "ivec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec4")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec4")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec4")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec4")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProj" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("pDx" "vec3") ("pDy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("pDx" "vec3") ("pDy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("pDx" "float") ("pDy" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec4") ("pDx" "vec2") ("pDy" "vec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGrad" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("pDx" "vec3") ("pDy" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("dPdx" "vec3") ("dPdy" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("dPdx" "vec3") ("dPdy" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("dPdx" "float") ("dPdy" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec4") ("dPdx" "vec2") ("dPdy" "vec2") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjGradOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("dPdx" "vec3") ("dPdy" "vec3") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLod" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("lod" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("lod" "float") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("lod" "float") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("lod" "float") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("lod" "float") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjLodOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("lod" "float") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "float" :args (("sampler" "sampler1DShadow") ("P" "vec4") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "float" :args (("sampler" "sampler2DRectShadow") ("P" "vec4") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "float" :args (("sampler" "sampler2DShadow") ("P" "vec4") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec2") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler1D") ("P" "vec4") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec3") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler2D") ("P" "vec4") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec3") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler2DRect") ("P" "vec4") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("offset" "ivec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "ivec4" :args (("sampler" "isampler3D") ("P" "vec4") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec2") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler1D") ("P" "vec4") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec3") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler2D") ("P" "vec4") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec3") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler2DRect") ("P" "vec4") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("offset" "ivec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "uvec4" :args (("sampler" "usampler3D") ("P" "vec4") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec2") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("offset" "int") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler1D") ("P" "vec4") ("offset" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec3") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("offset" "ivec2") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler2D") ("P" "vec4") ("offset" "ivec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec3") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler2DRect") ("P" "vec4") ("offset" "ivec2")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("offset" "ivec3") ("bias" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureProjOffset" :return "vec4" :args (("sampler" "sampler3D") ("P" "vec4") ("offset" "ivec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isampler1D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isampler1DArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isampler2D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isampler2DArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isampler3D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isamplerCube")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "isamplerCubeArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler1D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler1DArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler1DArrayShadow")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler1DShadow")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler2D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler2DArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler2DArrayShadow")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler2DShadow")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "sampler3D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "samplerCube")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "samplerCubeArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "samplerCubeArrayShadow")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "samplerCubeShadow")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usampler1D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usampler1DArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usampler2D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usampler2DArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usampler3D")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usamplerCube")) :versions (430 440 450) :pure t)
    (:name "textureQueryLevels" :return "int" :args (("sampler" "usamplerCubeArray")) :versions (430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isampler1D") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isampler1DArray") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isampler2D") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isampler2DArray") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isampler3D") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isamplerCube") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "isamplerCubeArray") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler1D") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler1DArray") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler1DArrayShadow") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler1DShadow") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler2D") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler2DArray") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler2DArrayShadow") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler2DShadow") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "sampler3D") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "samplerCube") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "samplerCubeArray") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "samplerCubeArrayShadow") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "samplerCubeShadow") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usampler1D") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usampler1DArray") ("P" "float")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usampler2D") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usampler2DArray") ("P" "vec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usampler3D") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usamplerCube") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureQueryLod" :return "vec2" :args (("sampler" "usamplerCubeArray") ("P" "vec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureSamples" :return "int" :args (("sampler" "isampler2DMS")) :versions (450) :pure t)
    (:name "textureSamples" :return "int" :args (("sampler" "sampler2DMS")) :versions (450) :pure t)
    (:name "textureSamples" :return "int" :args (("sampler" "sampler2DMSArray")) :versions (450) :pure t)
    (:name "textureSamples" :return "int" :args (("sampler" "usampler2DMS")) :versions (450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "isampler1D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "isamplerBuffer")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "sampler1D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "sampler1DShadow") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "samplerBuffer")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "usampler1D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "int" :args (("sampler" "usamplerBuffer")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "isampler1DArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "isampler2D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "isampler2DMS")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "isamplerCube") ("lod" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "isamplerRect")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "sampler1DArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "sampler1DArrayShadow") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "sampler2D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "sampler2DMS")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "sampler2DRectShadow")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "sampler2DShadow") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "samplerCube") ("lod" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "samplerCubeShadow") ("lod" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "samplerRect")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "usampler1DArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "usampler2D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "usampler2DMS")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "usamplerCube") ("lod" "int")) :versions (400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec2" :args (("sampler" "usamplerRect")) :versions (140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "isampler2DArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "isampler3D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "sampler2DArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "sampler2DArrayShadow") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "sampler2DMSArray")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "sampler3D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "samplerCubeArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "samplerCubeArrayShadow") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "usampler2DArray") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "textureSize" :return "ivec3" :args (("sampler" "usampler3D") ("lod" "int")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat2" :args (("m" "dmat2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat2x3" :args (("m" "dmat3x2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat2x4" :args (("m" "dmat4x2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat3" :args (("m" "dmat3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat3x2" :args (("m" "dmat2x3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat3x4" :args (("m" "dmat4x3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat4" :args (("m" "dmat4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat4x2" :args (("m" "dmat2x4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "dmat4x3" :args (("m" "dmat3x4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat2" :args (("m" "mat2")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat2x3" :args (("m" "mat3x2")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat2x4" :args (("m" "mat4x2")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat3" :args (("m" "mat3")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat3x2" :args (("m" "mat2x3")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat3x4" :args (("m" "mat4x3")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat4" :args (("m" "mat4")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat4x2" :args (("m" "mat2x4")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "transpose" :return "mat4x3" :args (("m" "mat3x4")) :versions (120 130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "double" :args (("x" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "dvec2" :args (("x" "dvec2")) :versions (400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "dvec3" :args (("x" "dvec3")) :versions (400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "dvec4" :args (("x" "dvec4")) :versions (400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "float" :args (("x" "float")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "vec2" :args (("x" "vec2")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "vec3" :args (("x" "vec3")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "trunc" :return "vec4" :args (("x" "vec4")) :versions (130 140 150 330 400 410 420 430 440 450) :pure t)
    (:name "uaddCarry" :return "uint" :args (("x" "uint") ("y" "uint") ("carry" "uint" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "uaddCarry" :return "uvec2" :args (("x" "uvec2") ("y" "uvec2") ("carry" "uvec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "uaddCarry" :return "uvec3" :args (("x" "uvec3") ("y" "uvec3") ("carry" "uvec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "uaddCarry" :return "uvec4" :args (("x" "uvec4") ("y" "uvec4") ("carry" "uvec4" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "uintBitsToFloat" :return "float" :args (("x" "uint")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "uintBitsToFloat" :return "vec2" :args (("x" "uvec2")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "uintBitsToFloat" :return "vec3" :args (("x" "uvec3")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "uintBitsToFloat" :return "vec4" :args (("x" "uvec4")) :versions (330 400 410 420 430 440 450) :pure t)
    (:name "umulExtended" :return "void" :args (("x" "uint") ("y" "uint") ("msb" "uint" :out) ("lsb" "uint" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "umulExtended" :return "void" :args (("x" "uvec2") ("y" "uvec2") ("msb" "uvec2" :out) ("lsb" "uvec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "umulExtended" :return "void" :args (("x" "uvec3") ("y" "uvec3") ("msb" "uvec3" :out) ("lsb" "uvec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "umulExtended" :return "void" :args (("x" "uvec4") ("y" "uvec4") ("msb" "uvec4" :out) ("lsb" "uvec4" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "unpackDouble2x32" :return "uvec2" :args (("d" "double")) :versions (400 410 420 430 440 450) :pure t)
    (:name "unpackHalf2x16" :return "vec2" :args (("v" "uint")) :versions (420 430 440 450) :pure t)
    (:name "unpackSnorm2x16" :return "vec2" :args (("p" "uint")) :versions (420 430 440 450) :pure t)
    (:name "unpackSnorm4x8" :return "vec4" :args (("p" "uint")) :versions (410 420 430 440 450) :pure t)
    (:name "unpackUnorm2x16" :return "vec2" :args (("p" "uint")) :versions (410 420 430 440 450) :pure t)
    (:name "unpackUnorm4x8" :return "vec4" :args (("p" "uint")) :versions (410 420 430 440 450) :pure t)
    (:name "usubBorrow" :return "uint" :args (("x" "uint") ("y" "uint") ("borrow" "uint" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "usubBorrow" :return "uvec2" :args (("x" "uvec2") ("y" "uvec2") ("borrow" "uvec2" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "usubBorrow" :return "uvec3" :args (("x" "uvec3") ("y" "uvec3") ("borrow" "uvec3" :out)) :versions (400 410 420 430 440 450) :pure t)
    (:name "usubBorrow" :return "uvec4" :args (("x" "uvec4") ("y" "uvec4") ("borrow" "uvec4" :out)) :versions (400 410 420 430 440 450) :pure t)))
