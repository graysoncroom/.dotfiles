(in-package :varjo)
(in-readtable fn:fn-reader)

(defparameter *glsl-type->varjo-type*
  '(("atomic_uint" v-atomic-uint)
    ("bool" v-bool)
    ("bufferImage" v-buffer-image)
    ("bvec2" v-bvec2)
    ("bvec3" v-bvec3)
    ("bvec4" v-bvec4)
    ("dmat2" v-dmat2)
    ("dmat2x3" v-dmat2x3)
    ("dmat2x4" v-dmat2x4)
    ("dmat3" v-dmat3)
    ("dmat3x2" v-dmat3x2)
    ("dmat3x4" v-dmat3x4)
    ("dmat4" v-dmat4)
    ("dmat4x2" v-dmat4x2)
    ("dmat4x3" v-dmat4x3)
    ("double" v-double)
    ("dvec2" v-dvec2)
    ("dvec3" v-dvec3)
    ("dvec4" v-dvec4)
    ("float" v-float)
    ("ibufferImage" v-ibuffer-image)
    ("iimage1D" v-iimage-1d)
    ("iimage1DArray" v-iimage-1d-array)
    ("iimage2D" v-iimage-2d)
    ("iimage2DArray" v-iimage-2d-array)
    ("iimage2DMS" v-iimage-2d-ms)
    ("iimage2DMSArray" v-iimage-2d-ms-array)
    ("iimage2DRect" v-iimage-2d-rect)
    ("iimage3D" v-iimage-3d)
    ("iimageBuffer" v-iimage-buffer)
    ("iimageCube" v-iimage-cube)
    ("iimageCubeArray" v-iimage-cube-array)
    ("iimageRect" v-iimage-rect)
    ("image1D" v-image-1d)
    ("image1DArray" v-image-1d-array)
    ("image2D" v-image-2d)
    ("image2DArray" v-image-2d-array)
    ("image2DMS" v-image-2d-ms)
    ("image2DMSArray" v-image-2d-ms-array)
    ("image2DRect" v-image-2d-rect)
    ("image3D" v-image-3d)
    ("imageBuffer" v-image-buffer)
    ("imageCube" v-image-cube)
    ("imageCubeArray" v-image-cube-array)
    ("imageRect" v-image-rect)
    ("int" v-int)
    ("isampler1D" v-isampler-1d)
    ("isampler1DArray" v-isampler-1d-array)
    ("isampler2D" v-isampler-2d)
    ("isampler2DArray" v-isampler-2d-array)
    ("isampler2DMS" v-isampler-2d-ms)
    ("isampler2DRect" v-isampler-2d-rect)
    ("isampler3D" v-isampler-3d)
    ("isamplerBuffer" v-isampler-buffer)
    ("isamplerCube" v-isampler-cube)
    ("isamplerCubeArray" v-isampler-cube-array)
    ("isamplerRect" v-isampler-rect)
    ("ivec2" v-ivec2)
    ("ivec3" v-ivec3)
    ("ivec4" v-ivec4)
    ("mat2" v-mat2)
    ("mat2x2" v-mat2x2)
    ("mat2x3" v-mat2x3)
    ("mat2x4" v-mat2x4)
    ("mat3" v-mat3)
    ("mat3x2" v-mat3x2)
    ("mat3x3" v-mat3x3)
    ("mat3x4" v-mat3x4)
    ("mat4" v-mat4)
    ("mat4x2" v-mat4x2)
    ("mat4x3" v-mat4x3)
    ("mat4x4" v-mat4x4)
    ("sampler1D" v-sampler-1d)
    ("sampler1DArray" v-sampler-1d-array)
    ("sampler1DArrayShadow" v-sampler-1d-array-shadow)
    ("sampler1DShadow" v-sampler-1d-shadow)
    ("sampler2D" v-sampler-2d)
    ("sampler2DArray" v-sampler-2d-array)
    ("sampler2DArrayShadow" v-sampler-2d-array-shadow)
    ("sampler2DMS" v-sampler-2d-ms)
    ("sampler2DMSArray" v-sampler-2d-ms-array)
    ("sampler2DRect" v-sampler-2d-rect)
    ("sampler2DRectShadow" v-sampler-2d-rect-shadow)
    ("sampler2DShadow" v-sampler-2d-shadow)
    ("sampler3D" v-sampler-3d)
    ("samplerBuffer" v-sampler-buffer)
    ("samplerCube" v-sampler-cube)
    ("samplerCubeArray" v-sampler-cube-array)
    ("samplerCubeArrayShadow" v-sampler-cube-array-shadow)
    ("samplerCubeShadow" v-sampler-cube-shadow)
    ("samplerRect" v-sampler-rect)
    ("ubufferImage" v-ubuffer-image)
    ("uimage1D" v-uimage-1d)
    ("uimage1DArray" v-uimage-1d-array)
    ("uimage2D" v-uimage-2d)
    ("uimage2DArray" v-uimage-2d-array)
    ("uimage2DMS" v-uimage-2d-ms)
    ("uimage2DMSArray" v-uimage-2d-ms-array)
    ("uimage2DRect" v-uimage-2d-rect)
    ("uimage3D" v-uimage-3d)
    ("uimageBuffer" v-uimage-buffer)
    ("uimageCube" v-uimage-cube)
    ("uimageCubeArray" v-uimage-cube-array)
    ("uimageRect" v-uimage-rect)
    ("uint" v-uint)
    ("usampler1D" v-usampler-1d)
    ("usampler1DArray" v-usampler-1d-array)
    ("usampler2D" v-usampler-2d)
    ("usampler2DArray" v-usampler-2d-array)
    ("usampler2DMS" v-usampler-2d-ms)
    ("usampler2DRect" v-usampler-2d-rect)
    ("usampler3D" v-usampler-3d)
    ("usamplerBuffer" v-usampler-buffer)
    ("usamplerCube" v-usampler-cube)
    ("usamplerCubeArray" v-usampler-cube-array)
    ("usamplerRect" v-usampler-rect)
    ("uvec2" v-uvec2)
    ("uvec3" v-uvec3)
    ("uvec4" v-uvec4)
    ("vec2" v-vec2)
    ("vec3" v-vec3)
    ("vec4" v-vec4)
    ("void" v-void)
    ("gl_DepthRangeParameters" v-depth-range-parameters)
    ("gl_PerVertex" v-per-vertex)))

(defun %parse (name &optional (start-at 0) (prefix ""))
  (with-input-from-string (seq name :start start-at)
    (let (last-case
          case-changed
          (frist t))
      (labels ((readc (seq)
                 (let ((r (read-char seq nil :eos)))
                   (unless (eq r :eos)
                     (setf case-changed (and (not last-case)
                                             (upper-case-p r))
                           last-case (upper-case-p r)))
                   r)))
        (format nil "~a~{~a~}"
                prefix
                (loop :for char = (readc seq)
                   :while (not (eq char :eos)) :collect
                   (prog1
                       (if (and case-changed (not frist))
                           (format nil "-~a" (string-upcase char))
                           (string-upcase char))
                     (setf frist nil))))))))

(defun parse-gl-func-name (name)
  (%parse name))

(defun parse-gl-var-name (name)
  (%parse name 3 "GL-"))

(defun parse-gl-type-name (name)
  (assert (stringp name))
  (cond
    ((char= (aref name 0) #\[)
     `(,(parse-gl-type-name (subseq name 1)) *))
    ((char= (aref name 0) #\{)
     `(v-ephemeral-array ,(parse-gl-type-name (subseq name 1)) *))
    (t (or (first (assocr name *glsl-type->varjo-type* :test #'equal))
           (error "Could not find varjo type for ~s" name)))))
