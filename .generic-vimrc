" Should work with vim and neovim.
" Plans include either XVim configs or JetBrains vim emulator configs

" STYLE GUIDE: Comments {{{
" One double quote means comments about code.
" Two double quotes mean code commented out.
"
" When possible keep comments on the same line as the code it refers to,
" otherwise put the comment on its own line directly above the code it refers
" to.
"
" When in doubt, comment the living fuck out of your config changes.
" Do not expain how it works, explain what it does and why it is useful.
" I want reasons behind configs.
" }}}

" OTHER: personal settings {{{
let mapleader=" "   " changing <leader> to space
let localleader=" " " change <localleader> to space

nnoremap <c-j> <c-w><c-j>
nnoremap <c-k> <c-w><c-k>
nnoremap <c-l> <c-w><c-l>
nnoremap <c-h> <c-w><c-h>
nnoremap ; :
nnoremap : ;
inoremap jk <esc>

set shell=bash                 "make sure the shell is bash on every system
set backspace=indent,eol,start "vim backspace acts like a normal god damn editor should
set listchars=tab:>.           " visual representation of certain characters when list is set
set wildmode=longest,list      " Bash-style tab completion
set viewoptions-=options       " views will not save keymappings ( only preserve buffer folds )
""set laststatus=2               " status line is always at the bottom of the screen ( only to be set when vim-airline plugin is on )
set bg=light                   " with a black terminal light syntax looks much better
set encoding=utf-8             " Unicode support ( just to make sure )
set splitbelow                 " more natural split opening ( open split down when applicable )
set splitright                 " more natural split opening ( open split to the right when applicable )
set incsearch                  " search for patterns as you type them in
set nohlsearch                 " do not highlight patterns after enter key is pressed on search
set copyindent                 " use same pattern as the rest of file when auto indenting
set preserveindent             " use same pattern as the rest of file when shifting current line over
set shiftwidth=4               " affects how automatic indentation works as well as indent shifting
set tabstop=4                  " number of visual spaces per <Tab>
set number                     " show line numbers
set relativenumber             " show number of lines away each line is from current line
set autoindent                 " enable automatic indentation
set smartindent                " enable c-style indentation ( not sure how this is any different from auto indent tbh )
set nowrap                     " no line wrapping ( personal preference )
set t_co=256                   " enable 256-color mode
set nolist                     " disable the listing of invisible characters (personal preference)
set wildmenu                   " will display menu of completions in command mode when <tab> is clicked
syntax enable                  " enable syntax highlighting
" }}}

" PLUGIN: javaimp {{{
let g:javaimppaths = $HOME . "/dotfiles/.generic-vim-javaImp/jdk-source/"
let g:javaimpdatadir = $HOME . "/dotfiles/.generic-vim-javaImp/JavaImp"
" }}}

" PLUGIN: syntastic {{{
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
" }}}

" PLUGIN: vim-slime {{{
let g:slime_target="tmux" " defaults to tmux for pushing text to next window ( <C-c> <C-c> )
" }}}

" PLUGIN: nerdtree {{{
nnoremap <leader>h :NERDTreeToggle<cr>
" }}}

" LANG: lisp {{{
autocmd filetype lisp set shiftwidth=2
autocmd filetype lisp set tabstop=2
autocmd filetype lisp set expandtab
" }}}

" LANG: html {{{
autocmd filetype html set wrap
autocmd filetype html nnoremap j gj
autocmd filetype html nnoremap k gk
autocmd filetype html nnoremap gj j
autocmd filetype html nnoremap gk k
" }}}

" LANG: tex {{{
autocmd filetype tex set wrap
autocmd filetype tex nnoremap j gj
autocmd filetype tex nnoremap k gk
autocmd filetype tex nnoremap gj j
autocmd filetype tex nnoremap gk k
autocmd filetype tex nnoremap <leader>tp :r ~/dotfiles/.vim/boilerplates/tex<CR>ggdd
" }}}

" LANG: java {{{
autocmd filetype java nnoremap <leader><leader>ii :JIF
autocmd filetype java nnoremap <leader><leader>is :JIFS
" }}}

" files will be loaded and saved folds upon opening and closing, respectively
autocmd bufwinleave * if expand("%") != "" | mkview | endif
autocmd bufwinenter * if expand("%") != "" | loadview | endif

" Insert a single character between two characters
nnoremap <leader>i i_<esc>r

" Insert a newline at current position.
" Intended to be the opposite of the j{oin] command.
nnoremap <leader>j mpi<cr><Esc>`p

" toggle spelling
nnoremap <leader><leader>ss :setlocal spell! spelllang=en_us<CR>

if has("unix")
	let s:uname = system("uname -s")
	if s:uname == "darwin"
		let g:xcode_default_simulator = 'iPhone 5'
		set secure " don't let external configs do scary shit
		set exrc   " load local vimrc if found
	endif
endif
